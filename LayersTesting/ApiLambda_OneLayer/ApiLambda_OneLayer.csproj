<Project Sdk="Microsoft.NET.Sdk.Web">
  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <GenerateRuntimeConfigurationFiles>true</GenerateRuntimeConfigurationFiles>
    <AWSProjectType>Lambda</AWSProjectType>
    <!-- This property makes the build directory similar to a publish directory and helps the AWS .NET Lambda Mock Test Tool find project dependencies. -->
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <!-- Generate ready to run images during publishing to improvement cold starts. -->
    <PublishReadyToRun>true</PublishReadyToRun>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="Amazon.Lambda.AspNetCoreServer.Hosting" Version="1.6.1" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Common.Dtos\Common.Dtos.csproj" />
    <ProjectReference Include="..\DataLayer\DataLayer.csproj" />
  </ItemGroup>
  <ItemGroup>
    <None Include="layer\RuntimeStore.csproj" />
  </ItemGroup>
	<Target Name="PackageLambdaBuildStep" AfterTargets="Build" Condition="'$(PackageLambdas)'=='True' And '$(Configuration)'=='Release'">
		<Message Importance="High" Text="Packaging Lambda into ZIP" />
		<Exec Command="dotnet store --manifest ./layer/RuntimeStore.csproj --runtime linux-musl-x64 --output ./artifact --skip-optimization --skip-symbols"/>
		<MakeDir Directories="$(ProjectDir)..\..\build\packages" />
		<ZipDirectory
		   Overwrite="true"
		   SourceDirectory=".\artifact\"
		   DestinationFile="$(ProjectDir)..\..\build\packages\api-layer.zip" />
		<Exec Command='dotnet-lambda package -f $(TargetFramework) --disable-interactive true --no-build --configuration Release --msbuild-parameters "--manifest  ./artifact/x64/net6.0/artifact.xml"' />
		<Copy SourceFiles=".\bin\$(Configuration)\$(TargetFramework)\$(ProjectName).zip" DestinationFolder="$(ProjectDir)..\..\build\packages" />
	</Target>
	
</Project>